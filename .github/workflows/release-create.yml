name: "Release: Create"

on:
  workflow_dispatch:
    inputs:
      prs:
        description: 'Pull Requests to Merge (comma separated list)'
        required: true

jobs:
  release-create:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 0

      - name: Create Branch Name
        uses: actions/github-script@v6
        id: branchRelease
        with:
          script: |
            const release = require('./.github/workflows/release.js');
            return release.getBranchName();

      - name: Create Release Branch
        run: |
          git checkout -b ${{ steps.branchRelease.outputs.result }} main
          git push origin ${{ steps.branchRelease.outputs.result }} -f

      - name: Close PRs
        uses: actions/github-script@v6
        with:
          script: |
            console.log('Close Release PR');
            console.log('Close Tasks PRs');

      - name: Update/Create and Merge PRs
        uses: actions/github-script@v6
        id: releasePRs
        with:
          script: |
            const { repo, owner } = context.repo;
            const pullRequestIDs = "${{ github.event.inputs.prs }}".split(',').map(pr => pr.trim());

            return pullRequestIDs.map(id => {
              let title, number;

              try {
                const pull = await github.rest.pulls.get({
                  owner,
                  repo,
                  pull_number: id,
                });

                if (pull.data.state === 'open') {
                  await github.rest.pulls.update({
                    owner,
                    repo,
                    base: release.getBranchName(),
                    pull_number: id,
                  });

                  title = pull.data.title;
                  number = pull.data.number;
                } else {
                  const pullCreated = await github.rest.pulls.create({
                    owner,
                    repo,
                    base: release.getBranchName(),
                    head: pull.data.head.ref,
                    title: pull.data.title,
                    body: pull.data.body,
                  });

                  title = pullCreated.data.title;
                  number = pullCreated.data.number;
                }

                await github.rest.pulls.merge({
                  owner,
                  repo,
                  pull_number: number,
                  merge_method: "squash",
                  sha: pull.data.head.sha,
                });

                return { title, number };
              } catch (error) {
                console.log(error);
                return {};
              }
            });

      - name: Create Description
        uses: actions/github-script@v6
        with:
          script: |
            console.log('Description');

      - name: Create Release PR
        uses: actions/github-script@v6
        with:
          script: |
            const { repo, owner } = context.repo;
            const release = require('./.github/workflows/release.js');

            try {
              await github.rest.pulls.create({
                owner,
                repo,
                title: release.getPullRequestTitle(),
                head: release.getBranchName(),
                base: 'main',
                body: `## ðŸŽ‰ Lista de demandas:\n\n${{ github.event.inputs.prs }}`
              });
            } catch (error) {
              console.log(error);
            }
